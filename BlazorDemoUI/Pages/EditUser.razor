@page "/users/{id:int}"
@using BlazorDemo.Application.Users.GetAll
@using BlazorDemo.Application.Users.Save
@using BlazorDemo.Domain.Addresses
@using User = BlazorDemo.Domain.Users.User
@using MediatR
@inject IJSRuntime JsRuntime
@inject IMediator Mediator
@inject NavigationManager NavigationManager

@code {
    #region Props

    [Parameter]
    public int id { get; set; }

    List<City> Cities = new();

    User CurrentUser = new();

    string SelectedPostCode;

    #endregion

    #region Override
    protected override async Task OnInitializedAsync()
    {
        Cities = new List<City>()
        {
            new City("5000", "Szolnok"),
            new City("1000", "Budapest"),
            new City("5052", "Újszász"),
        };

        CurrentUser = await Mediator.Send(new GetUserQuery(id)) ?? new User();
        SelectedPostCode = CurrentUser?.City?.PostCode ?? Cities.FirstOrDefault()?.PostCode;
    }
    #endregion

    #region Methods

    async void HandleValidSubmit()
    {
        try
        {
            await Mediator.Send(new SaveUserCommand(CurrentUser));
            NavigationManager.NavigateTo("/users");
        }
        catch (Exception ex)
        {
            await JsRuntime.InvokeVoidAsync("alert", ex.Message);
        }
    }

    async void HandleInvalidSubmit()
    {
        //await JsRuntime.InvokeVoidAsync("alert", "Töltse ki a felhasználó adatait!");
    }

    void OnDropDownValueChanged(string postCode)
    {
        this.SelectedPostCode = postCode;
        var city = this.Cities.FirstOrDefault(x => x.PostCode == postCode);
        CurrentUser.City = city;
    }

    void RedirectToUsers()
    {
        NavigationManager.NavigateTo("/users");
    }

    #endregion
}

<AuthorizeView>
    <Authorized>
        <div class="container">
            <h3>Felhasználó szerkesztése</h3>

            <TelerikForm Model="@CurrentUser"
                         OnValidSubmit="@HandleValidSubmit"
                         OnInvalidSubmit="@HandleInvalidSubmit">
                <FormValidation>
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                </FormValidation>
                <FormItems>
                    <FormItem Field="@nameof(CurrentUser.Email)">
                        <Template>
                            <label for="mail" class="k-label k-form-label">Email*:</label>
                            <TelerikTextBox Id="mail" @bind-Value="@CurrentUser.Email" InputMode="email" Placeholder="example@domain.com"></TelerikTextBox>
                            <TelerikValidationMessage For="@(() => CurrentUser.Email)"></TelerikValidationMessage>
                        </Template>
                    </FormItem>
                    <FormItem Field="@nameof(CurrentUser.Password)">
                        <Template>
                            <label for="pass" class="k-label k-form-label">Password*:</label>
                            <TelerikTextBox Id="pass" @bind-Value="@CurrentUser.Password" Password="true"></TelerikTextBox>
                            <TelerikValidationMessage For="@(() => CurrentUser.Password)"></TelerikValidationMessage>
                        </Template>
                    </FormItem>
                    <FormItem Field="@nameof(CurrentUser.City)">
                        <Template>
                            <label for="city" class="k-label k-form-label">Város*:</label>
                            <TelerikDropDownList Data="@Cities"
                                                 TextField="@nameof(City.Name)"
                                                 ValueField="@nameof(City.PostCode)"
                                                 DefaultText="Válassz ki egy várost"
                                                 Value="@SelectedPostCode"
                                                 ValueExpression="@( () => SelectedPostCode )"
                                                 ValueChanged="@( (string newValue) => OnDropDownValueChanged(newValue) )">
                            </TelerikDropDownList>
                            <TelerikValidationMessage For="@(() => CurrentUser.City)"></TelerikValidationMessage>
                        </Template>
                    </FormItem>
                    <FormAutoGeneratedItems></FormAutoGeneratedItems>
                </FormItems>
                <FormButtons>
                    <TelerikButton Class="form-button" ButtonType="@ButtonType.Button" ThemeColor="primary" OnClick="RedirectToUsers">Vissza</TelerikButton>
                    <TelerikButton Class="form-button" ButtonType="@ButtonType.Submit" ThemeColor="primary">Mentés</TelerikButton>
                </FormButtons>
            </TelerikForm>
        </div>
    </Authorized>
    <NotAuthorized>
        <h1>Bejelentkezés szükséges!</h1>
    </NotAuthorized>
</AuthorizeView>

